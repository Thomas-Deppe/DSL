init
lw A 02 //Sets screens initial colour
sw A B0

Timer_Instruct
LOOP_X
lw A 00 //Loads X from RAM
li B 32 //Checks X1 Bound
breq A B WriteColumn //If on bound write to VGA
li B 6E //Checks X2 Bound
breq A B WriteColumn //If on bound write to VGA
li B A0
breq A B RESET_X
inc A
sw A 00
goto LOOP_X

WriteColumn
lw A 00
sw A B1 //Writes X to the VGA
lw B 01 //Reads Y from RAM
sw B B2 //Writes Y to the VGA
sw B B3 //Enable colour change
inc A
sw A 00
goto LOOP_X

RESET_X
li A 00 
sw A 00 
lw B 01
inc B
sw B 01
goto LOOP_Y

LOOP_Y
lw A 00 
li B A0 
breq A B RESET_X
lw A 01 //Loads Y from RAM
li B 28 //Checks Y1 Bound
breq A B WriteRow //If on bound write to VGA
li B 50 //Checks Y2 Bound
breq A B WriteRow //If on bound write to VGA
li B 79
breq A B RESET_Y
goto LOOP_X

WriteRow
lw A 01
sw A B2 //Writes Y to the VGA
lw B 00 //Loads X from RAM
sw B B1 // Writes X to VGA
sw B B3 //Enables colour change
inc B
sw B 00
goto LOOP_Y

RESET_Y
li A 00 
sw A 01
idle

Mouse_Instruct
lw A 04 
lw B 05 
sw A B1
sw B B2
sw B B4
lw A A1 
sw A 04
lw B A2
li A 78
sub A B 
sw A 05
goto DETECTION

DISP_MOUSE
lw A 04
lw B 05
sw A B1
sw B B2
sw B B3
goto Timer_Instruct

DETECTION
lw A 04
li B 32 
bltq A B REGION1
li B 6E
bltq A B REGION2
li B A0
bltq A B REGION3

REGION1
lw A 05
li B 28
bltq A B LEFT_FORWARD
li B 50 
bltq A B LEFT
li B 78
bltq A B LEFT_BACKWARDS

REGION2
lw A 05
li B 28
bltq A B FORWARD
li B 50 
bltq A B NEUTRAL
li B 78
bltq A B BACKWARDS

REGION3
lw A 05
li B 28
bltq A B RIGHT_FORWARD
li B 50 
bltq A B RIGHT
li B 78
bltq A B RIGHT_BACKWARDS

LEFT_FORWARD
lw A 07
lw B 09 
add A B 
sw A 06
goto SEND_COMMAND

LEFT
lw A 07
sw A 06
goto SEND_COMMAND

LEFT_BACKWARDS
lw A 07
lw B 0A 
add A B 
sw A 06
goto SEND_COMMAND

FORWARD
lw A 09
sw A 06
goto SEND_COMMAND

NEUTRAL
li A 00
sw A 06
goto SEND_COMMAND

BACKWARDS
lw A 0A
sw A 06
goto SEND_COMMAND

RIGHT_FORWARD
lw A 08
lw B 09 
add A B 
sw A 06
goto SEND_COMMAND

RIGHT
lw A 08
sw A 06
goto SEND_COMMAND

RIGHT_BACKWARDS
lw A 08
lw B 0A 
add A B 
sw A 06
goto SEND_COMMAND

SEND_COMMAND
lw A 06 
sw A 90
sw A C0
goto DISP_MOUSE

// RAM Allocation
// 0x00 X pixel address
// 0x01 Y pixel address
// 0x02 Colour
// 0x03 Mouse Status
// 0x04 Mouse X 
// 0x05 Mouse Y
// 0x06 IR Command to send
// 0x07 LEFT Command
// 0x08 RIGHT Command
// 0x09 FORWARD Command
// 0x0A BACKWARDS Command